# Setup Kubernetes cluster on Fedora 32 VM
---
- name: Setup Kubernetes cluster on Fedora
  hosts: all
  become: yes
  vars:
    User: fedora
    HOME: "/home/{{ User }}"
    UpdateAllRPMs: no
    TaintedNode: no
    SetupKataContainers: no
    F32:
      - bash-completion
      - git
      - gcc
      - make
      - wget
      - tmux
      - vim
      - python3-libselinux
    sysctl_configs:
      - net.bridge.bridge-nf-call-ip6tables: 1
      - net.bridge.bridge-nf-call-iptables: 1
      - net.ipv4.ip_forward: 1
    services:
      - cri-o
      - kubelet
    repo_gpgkey:
      - https://packages.cloud.google.com/yum/doc/yum-key.gpg 
      - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

  pre_tasks:
    - name: Cleanup local known_hosts - hostname
      delegate_to: localhost
      connection: local
      lineinfile:
        regexp: "{{ ansible_fqdn }}"
        path: ~/.ssh/known_hosts
        state: absent

    - name: Cleanup local known_hosts - IP address
      delegate_to: localhost
      connection: local
      lineinfile:
        regexp: "{{ ansible_default_ipv4.address }}"
        path: ~/.ssh/known_hosts
        state: absent

    - name: Disable swap
      shell: swapoff -a

    - name: Disable swap in fstab
      replace:
        path: /etc/fstab
        regexp: '^([^#].*\s+swap\s+.*)'
        replace: '# \1'

    - name: Check kvm module
      modprobe:
         name: kvm
         state: present
      when: SetupKataContainers
      tags:
        - kata_containers

  tasks:
    - name: Install F32 packages
      block:
        - name: Installing packages
          dnf:
            name: "{{ F32 }}"
            state: latest
            update_cache: yes
          tags:
            - install
        - name: Updating all system packages
          dnf:
            name: '*'
            state: latest
          when: UpdateAllRPMs
          tags:
            - install

    - name: Ensuring encoding is set to en_US.utf-8
      lineinfile:
        path: "{{ HOME }}/.bashrc"
        state: present
        line: 'export LANG=en_US.UTF8'
      tags:
        - alias

    - name: Load br_netfilter
      shell:
        cmd: modprobe br_netfilter

    - name: Enable br_netfilter module
      lineinfile: 
        state: present
        create: yes
        dest: /etc/modules-load.d/br_netfilter.conf
        line: 'br_netfilter'
   
    - name: Enable CRI-O
      shell: dnf module enable -y cri-o:1.18

    - name: Install CRI-O
      dnf: 
        name: cri-o
        state: present

    - name: Enable sysctl settings
      sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        sysctl_file: /etc/sysctl.d/k8s.conf
        state: present
        reload: yes
      with_dict: "{{ sysctl_configs }}"

    - name: Add K8s repo
      yum_repository:
        name: kubernetes
        description: Kubernetes repo
        baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-$basearch
        gpgkey: "{{ repo_gpgkey }}"
        exclude: kubelet kubeadm kubectl

    - name: Install Kubernetes packages
      dnf: 
        name: kubelet, kubeadm, kubectl
        disable_excludes: kubernetes
        state: present

    - name: Put SELinux in permissive mode
      selinux:
        policy: targeted
        state: permissive

    - name: Enable CRI-O and Kubelet
      systemd:
        name: "{{ item }}"
        state: started
        enabled: yes
      with_items: 
        - "{{ services }}"

    - name: Copy kubeadm_config file
      copy:
        src: "{{ playbook_dir }}/files/kubeadm_config.yaml"
        dest: "{{ HOME }}/kubeadm_config.yaml"
        owner: root
        group: root
        mode: '0555'
      tags:
        - kubeadm_init

    - name: Create kubeadm cluster
      shell: kubeadm init --config {{ HOME }}/kubeadm_config.yaml
      register: debug_kubeadm_init
      tags:
        - kubeadm_init
    - debug: var=debug_kubeadm_init.stdout_lines

    - name: Create {{ HOME }}/.kube for {{ User}}
      file:
        path: "{{ HOME }}/.kube"
        state: directory
      tags:
        - kubeadm_init

    # This is ugly, but when using the copy module I've faced some issues related to permissions.
    - name: Copy the Kubernetes configuration file for {{ User }}
      shell: cp -f /etc/kubernetes/admin.conf {{ HOME }}/.kube/config && chown {{ User }}:{{ User }} {{ HOME }}/.kube -R
      tags:
        - kubeadm_init

    - name: Create ~/.kube for root
      file:
        path: ~/.kube
        state: directory
      tags:
        - kubeadm_init

    # This is ugly, but when using the copy module I've faced some issues related to permissions.
    - name: Copy the Kubernetes configuration file for root
      shell: cp -f /etc/kubernetes/admin.conf ~/.kube/config
      tags:
        - kubeadm_init

    - name: Allow scheduling Pods on the control-plane node
      shell: kubectl taint nodes --all node-role.kubernetes.io/master-
      when: TaintedNode
      tags:
        - tainted_node

    - name: Install Kata Containers packages
      dnf:
        name: kata-runtime
        state: present
      when: SetupKataContainers
      tags:
        - kata_containers

    - name: Create the kata runtime class
      shell: kubectl apply -f {{ playbook_dir }}/files/kata_runtimeclass.yaml
      when: SetupKataContainers
      tags:
        - kata_containers

    - name: Create /etc/crio/crio.conf.d/
      file:
        path: /etc/crio/crio.conf.d
        state: directory
        owner: root
        group: root
        mode: '0755'
      when: SetupKataContainers
      tags:
        - kata_containers

    - name: Create the CRI-O drop-in file for Kata Containers
      copy:
        src: "{{ playbook_dir }}/files/50-kata"
        dest: /etc/crio/crio.conf.d/50-kata
        owner: root
        group: root
        mode: '0644'
      when: SetupKataContainers
      tags:
        - kata_containers

    - name: Restart CRI-O service
      systemd:
        state: restarted
        daemon_reload: yes
        name: cri-o
      when: SetupKataContainers
      tags:
        - kata_containers
